menuFile.text = File
menuEdit.text = Modifica
menuHelp.text = aiuto
menuAbout.text = Info
menuDescription.text = Info algoritmo
menuExit.text = Esci
menuNewSim.text = Nuova simulazione
menuExportGraph.text = Esporta grafico
menuImportGraph.text = Importa simulazione
menuExportSim.text = Esporta simulazione

#help handler
helpTitle.text = Informazioni Scheduler

#exit handler
exitTitle.text = Conferma
exitHeader.text = ESCO DaLL'aPPLICaZIONE
exitContent.text = Sei sicuro di voler uscire?

#crea simulazione dialogo
textInputDialog.text = Inserisci il nome della simulazione
textAlgori.text = Seleziona l'algoritmo da eseguire
creaSimulation.text = Crea Simulazione

annullaCreaSimulation.text = annulla

#Exit dialog
exitDialogTitle.text = Chiusura processo
exitDialogSure.text = Sei sicuro di voler chiudere il processo?
exitDialogClose.text = Chiudi
exitDialogCancel.text = annulla

editDialogTitle.text = Modifica del processo
editDialogConfirm.text = Conferma
editDialogAnnulla.text = annulla

closeDescription.text = Chiudi
selezioneDescrizione.text = Seleziona l'algoritmo per vedere la descrizione

showDescription.text = Mostra descrizione algoritmo

#TODO FIXARE GLI ACCENTI CHE NON LI LEGGE JESUS
FIFO.text = L'algoritmo FCFS (First come, first served) e' un tipo di algoritmo FIFO: esegue i processi nello stesso ordine in cui essi vengono sottomessi al sistema. Il primo processo ad essere eseguito e' esattamente quello che per primo richiede l'uso della CPU. Quelli su'ccessivi vengono serviti non appena questo ha terminato la propria esecuzione, e cosi avviene successivamente per tutti gli altri posti in coda. Questo tipo di algoritmo e' molto semplice da implementare ma solitamente e' anche poco efficiente, almeno considerando il tempo medio d'attesa
SJF.text = Shortest Job First (SJF), anche conosciuto come Shortest Job Next (SJN) e' un metodo non-preemptive di scheduling che seleziona il processo in attesa con la pi� piccola sequenza successiva di operazioni. Shortest job first e' efficiente grazie alla relativa semplicit� e perch� eleva il throughput ossia il numero di processi portati a termine in un dato tempo. Tuttavia, possiede un potenziale problema di starvation, in cui e' possibile che un processo rimanga in attesa troppo tempo prima di essere completato se vengono aggiunti continuamente piccoli processi alla coda dei processi pronti. Questo algoritmo e' praticamente non implementabile in quanto non e' possibile stabilire con certezza la durata del prossimo CPU-burst del processo.
ROUND.text = La schedulazione Round Robin e' uno degli algoritmi impiegati dai processori e pianificatori di rete nel calcolo. Come il termine viene generalmente utilizzato, intervalli di tempo (conosciuti anche come "quanti di tempo") sono assegnati a ciascun processo in porzioni uguali e in modo circolare, trattando tutti i processi senza priorit� (noto anche come ciclico esecutivo). La programmazione Round-Robin e' semplice e facile da implementare. Essa pu� essere applicata anche ad altri problemi di pianificazione, come la schedulazione dei pacchetti di dati nelle reti di computer.
LOTTERY.text = La pianificazione della lotteria e' un algoritmo di pianificazione probabilistica per i processi in un sistema operativo. ai processi viene assegnato un certo numero di biglietti della lotteria e lo scheduler estrae un biglietto casuale per selezionare il processo successivo. La distribuzione dei biglietti non deve essere uniforme; concedere a un processo pi� ticket gli fornisce una possibilit� di selezione relativamente pi� alta. Questa tecnica pu� essere utilizzata per approssimare altri algoritmi di pianificazione, come il lavoro pi� breve successivo e la pianificazione con condivisione equa.
RMA.text = In informatica, lo scheduling rate-monotonic (RMS) e' un algoritmo di assegnazione delle priorit� utilizzato nei sistemi operativi in tempo reale (RTOS) con una classe di scheduling a priorit� statica. Le priorit� statiche vengono assegnate in base alla durata del ciclo del lavoro, quindi una durata del ciclo pi� breve determina una priorit� del lavoro pi� alta. Questi sistemi operativi sono generalmente preventivi e hanno garanzie deterministiche sui tempi di risposta. L'analisi monotona della velocit� viene utilizzata insieme a tali sistemi per fornire garanzie di pianificazione per una particolare applicazione.
EDF.text = L'Earliest Deadline First (EDF), in italiano prima la scadenza pi� vicina, e' un algoritmo di scheduling tipico dei sistemi operativi in tempo reale. Come dice il nome stesso, lo scheduler seleziona come prossimo processo da eseguire quello con la distanza minore dalla sua deadline. EDF e' un algoritmo a priorit� dinamica, in quanto la priorit� assegnata ai processi cambia potenzialmente ad ogni esecuzione dello scheduler e il suo valore dipende unicamente dalle caratteristiche temporali degli stessi (tempo di arrivo, deadline, ecc.)